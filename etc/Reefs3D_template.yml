# This is an example yaml configuration for a metashape run

#### Project-level parameters:

# Project to load. If not a blank string, this will open an existing project at the path specified. If a blank string, creates a new empty project.
# Even if opening an existing project, all processing on it is saved as a new project (path and name specified below). The original project file is not modified.
# When no project is specified, photos are automatically added to the new project as the first step. When a project is specified, photos are not added because they are assumed to be in the project.
#load_project: ""
load_project: "#PREV_RUN#"

# The path to the directory of flight photos
# If there are multiple photo folders, set path to the folder that contains all the photo folders
photo_path: "#PROJ_PATH#"

# Path for exports (e.g., points, DSM, orthomosaic) and processing log. Will be created if does not exist.
output_path: "#PROJ_PATH#/outputs/"

# Path to save Metashape project file (.psx). Will be created if does not exist
project_path: "#PROJ_PATH#"

# The identifier for the run. Will be used in naming output files. Recommended to include a photoset name and processing parameter set name.
run_name: "#PROJ_NAME#"

# if starting from scratch the items below should not need to be modified.

#### Processing parameters:
## Steps can be run or skipped using the 'enabled' parameter. If enabled == False, everything else in the step is irrelevant.
## The metashape functions powering each of these steps are listed in the comments in parentheses.
## Refer to Metashape documentation for full parameter definitions: https://www.agisoft.com/pdf/metashape_python_api_1_5_0.pdf
## Parameter names here generally follow the parameter names of the Metashape functions.


alignPhotos: # (Metashape: alignPhotos)
    enabled: True
    ## include more details - edited by MG - remove
    #keypoint_limit: 60000
    #tiepoint_limit: 0
    
optimizeCameras: # (Metashape: optimizeCameras)
    enabled: True
    
filterPointsUSGS_1: # added by MG
    enabled: True
    rec_thresh_percent: 30
    rec_thresh_absolute: 50
    proj_thresh_percent: 10
    proj_thresh_absolute: 10
    reproj_thresh_percent: 10
    reproj_thresh_absolute: 0.3
    
filterPointsUSGS_2: # added by MG
    enabled: True
    rec_thresh_percent: 30
    rec_thresh_absolute: 30
    proj_thresh_percent: 10
    proj_thresh_absolute: 6
    reproj_thresh_percent: 10
    reproj_thresh_absolute: 0.15
    
    
optimizeCameras: # (Metashape: optimizeCameras)
    enabled: True

buildDenseCloud: # (Metashape: buildDepthMaps, buildDenseCloud, classifyGroundPoints, and exportPoints) -- edited by MG for high res 3D model
    enabled: True
    ## For depth maps (buldDepthMaps)
    downscale: 2 # MG: may try 1 to compare Recommended: 4. How much to coarsen the photos when searching for matches to build the dense cloud. For large photosets, values < 4 likely take prohibitively long. Probably only accepts numbers 4^x.
    filter_mode: Metashape.MildFiltering # Recommended: Metashape.MildFiltering. How to filter the point cloud. Options are NoFiltering, MildFiltering, ModerateFiltering, AggressiveFiltering. Aggressive filtering removes detail and makes worse DEMs (at least for forest). NoFiltering takes very long. In trials, it never completed.
    reuse_depth: True # Recommended: False. Purpose unknown.
    ## For dense cloud (buildDenseCloud)
    keep_depth: True # Recommended: False. Purpose unknown.
    ## For both
    max_neighbors: -1 # Recommended: 100. Maximum number of neighboring photos to use for estimating point cloud. Higher numbers may increase accuracy but dramatically increase processing time.
    ## For ground point classification (classifyGroundPoints). Definitions here: https://www.agisoft.com/forum/index.php?topic=9328.0
    #classify: False #True # Must be enabled if a digital terrain model (DTM) is needed either for orthomosaic or DTM export
    classify: True # Must be enabled if a digital terrain model (DTM) is needed either for orthomosaic or DTM export
    max_angle: 15.0 # Recommended: 15.0
    max_distance: 1.0 # Recommended: 1.0
    cell_size: 50.0 # Recommended: 50.0
    ## For dense cloud export (exportPoints)
    export: True # Whether to export dense cloud file.
    format: Metashape.PointsFormatLAS # Recommended: PointsFormatLAS. The file format to export points in.
    classes: "ALL" # Recommended: "ALL". Point classes to export. Must be a list. Or can set to "ALL" to use all points. An example of a specific class is: Metashape.PointClass.Ground


buildModel: # (Metashape: buildModel, buildUV, buildTiledModel, exportModel)
    enabled: True
